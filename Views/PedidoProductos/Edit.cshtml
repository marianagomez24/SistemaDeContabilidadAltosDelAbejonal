@model SistemaContabilidadAltosDelAbejonal.Models.PedidoProducto

@{
    ViewBag.Title = "Editar Pedido";
}

<!-- Start right Content here -->
<!-- ============================================================== -->
<div class="page-content">
    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <!-- start page title -->
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box d-flex align-items-center justify-content-between">
                        <h4 class="mb-sm-0">Editar Datos</h4>

                        <div class="page-title-right">
                            <ol class="breadcrumb m-0">
                                <li class="breadcrumb-item"><a href="javascript: void(0);">Otras Opciones</a></li>
                                <li class="breadcrumb-item active">Editar Pedido</li>
                            </ol>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Datos del usuario</h3>
                    </div>
                    <div class="card-body">
                        <form class="custom-validation" action="#">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.IDPedidoProducto)
                            @Html.HiddenFor(model => model.IDProveedor)

                            <div class="row">
                                <label class="col-sm-4 col-lg-2 col-form-label">Estado</label>
                                <div class="col-sm-8 col-lg-10">
                                    <div class="mb-2">
                                        <div class="dropdown">
                                            <button class="btn btn-primary py-0 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                Seleccionar estado <i class="mdi mdi-chevron-down fs-17 align-middle ms-2"></i>
                                            </button>
                                            <div class="dropdown-menu">
                                                @foreach (var estado in new[] { "Pendiente", "Pagado" })
                                                {
                                                    <a class="dropdown-item estado-option" href="#" data-value="@estado">@estado</a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" id="Estado" name="Estado" value="@Model.Estado" />
                                    <p class="text-muted mb-0">Selecciona un estado desde el menú desplegable</p>
                                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    document.querySelectorAll(".estado-option").forEach(item => {
                                        item.addEventListener("click", function (e) {
                                            e.preventDefault();
                                            document.getElementById("Estado").value = this.getAttribute("data-value");
                                            document.querySelector(".dropdown-toggle").innerHTML = this.innerText + ' <i class="mdi mdi-chevron-down fs-17 align-middle ms-2"></i>';
                                        });
                                    });
                                });
                            </script>


                            <div class="mb-3">
                                @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="form-floating">
                                    @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-12">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                                <button type="button" class="btn btn-primary" style="color: white;">
                                    @Html.ActionLink("Regresar", "Index", null, new { @style = "color: white; text-decoration: none;" })
                                </button>
                            </div>
                        </form>
                        <!-- end card -->
                    </div> <!-- end col -->
                </div>
                <!-- end row -->
            </div> <!-- container-fluid -->
        }
    </div><!-- End Page-content -->
</div>